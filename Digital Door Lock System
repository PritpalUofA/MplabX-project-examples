#define F_CPU 1000000//for making system compatible with ms

#include <avr/io.h>
#include <util/delay.h> 

// ascending tune buzzer:
void BuzzerA(){
    
    for (int i = 0; i < 900; i++) { 
        PORTB |= (1 << PORTB3); // turn the buzzer
        _delay_ms(0.6); 
        PORTB &= ~(1 << PORTB3); 
        _delay_ms(0.6); 
    }
    
    // in order to make ascending tune producing high frequency
    for (int i = 0; i < 300; i++) {
        PORTB |= (1 << PORTB3); 
        _delay_ms(0.15);
        PORTB &= ~(1 << PORTB3);
        _delay_ms(0.15);
    }  
};

// to create Buzzer Descending function function
void BuzzerD() {
    
    for (int i = 0; i < 900; i++) {
        PORTB |= (1 << PORTB3); 
        _delay_ms(0.01);
        PORTB &= ~(1 << PORTB3);
        _delay_ms(0.01);
    }
    
    for (int i = 0; i < 400; i++) {
        PORTB |= (1 << PORTB3); 
        _delay_ms(0.7);
        PORTB &= ~(1 << PORTB3);
        _delay_ms(0.7);
    }   
};

// to create the single beep for button press
void Buzz() {
    
    for (int i = 0; i < 300; i++) {
        PORTB |= (1 << PORTB3);
        _delay_ms(0.4);
        PORTB &= ~(1 << PORTB3);
        _delay_ms(0.4);
    }
};

int s1(){ // function to return 1 when button 1 pressed

    int x;
    x = !(PINB & (1 << PORTB0));
    return (x);
};

int s2() {// function to return 1 when button 2 pressed
    
    int x;
    x = !(PINB & (1 << PORTB1));
    return (x);
};

int s3() {// function to return 1 when button 3 pressed
    
    int x;
    x = !(PINB & (1 << PORTB2));
    return (x);
};

/*
 * 
 */
int main(void) {
    
    DDRB |= (1 << DDB4); 
    DDRB |= (1 << DDB3); 
    PORTB &= ~(1 << PORTB4); // initially LED off

    DDRB &= ~(1 << DDB0); 
    DDRB &= ~(1 << DDB1);
    DDRB &= ~(1 << DDB2);
    PORTB |= (1 << PORTB0);
    PORTB |= (1 << PORTB1);
    PORTB |= (1 << PORTB2);


    while (1) {
        int correctPassword[] = {1, 2, 3, 1};
        int pressedkey[] = {0, 0, 0, 0};
        int counter = 0;
        
        if ((s1() || s2() || s3()) == 0) {// reset condition
            
            for (int i = 0; i < 4; i++){//i<4 as correct password is of 4 digits
                // when no key pressed it won't move
                while ((s1() || s2() || s3()) == 0) {

                }
                
                while (s1()) {// when switch 1 pressed
                    pressedkey[i] = 1;
                }
                
                while (s2()) {// when switch 2 pressed
                    pressedkey[i] = 2;
                }
                
                while (s3()) {// when switch 3 pressed
                    pressedkey[i] = 3;
                }
                // to stop the buzzing before the button is released
                while ((s1() || s2() || s3()) == 1) {

                }
                Buzz(); 
            }
            
            for (int i = 0; i < 4; i++) {
                if (pressedkey[i] == correctPassword[i]) {
                    counter = counter + 1; 

                } 
                else {
                    counter = 0;
                }
            }
            
            if (counter == 4) {
                PORTB |= (1 << PORTB4); 
                BuzzerA(); 
                
                while ((s1() || s2() || s3()) == 0) {//forces to press any key

                }
                Buzz();
                PORTB &= ~(1 << PORTB4); 
            } 
            else {
                BuzzerD(); 
            }
        }
    }
    return (0);
}
